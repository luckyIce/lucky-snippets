snippet ret "return" bA
return ${1}
endsnippet
snippet using "using namespace std" bA
using namespace std;
${0}
endsnippet
snippet ={ "strings" i  
={"$1","$2","$3","$4","$5","$6","$7","$8"
endsnippet
snippet vector "vector" A
vector<${1:int}> ${2:iVec};
${0}
endsnippet
snippet .find "size_t find(const string& str,size_t pos=0)" i
.find("${1}"${2:,${3}});
${0}
endsnippet
snippet str "string()" b
string ${1:str}${2};
endsnippet
# snippet str "string(const string& str)" b
# string ${1:str}(${2});
# ${0}
# endsnippet
# snippet str "string(const char* s)" b
# string ${1:str}("${2}");
# ${0}
# endsnippet
# snippet str "string(size_t n,char c)" b
# string ${1:str}(${2},${3});
# endsnippet
# snippet siz "size_t" b!
# size_t ${1:pos}
# endsnippet
snippet .sub "string substr(size_t pos=0,size_t len=npos)" i
.substr(${1});
${0}
endsnippet
snippet getl "istream& getline(istream& is,string& s)" b
getline(${1},${2});
${0}
endsnippet
snippet iterator "s.begin(),s.end()" i
${1}.begin()${2},$1.${3:begin()}${4}
endsnippet
snippet .push "push_back" iA
.push_back(${1});
${0}
endsnippet
snippet main "int main()" b
int main() {
   ${1} 
    return 0;
}
endsnippet
snippet cout "cout" b
cout<<$1<<endl;
${0}
endsnippet
snippet for "for loop (for)"
for (int ${2:i} = 0; $2 < ${1:count}; ${3:++$2}) {
	${VISUAL}${0}
}
endsnippet
snippet struct "LNode" b
typedef struct LNode{
    int data;
    LNode* next;
} LNode,*LinkList;
${0}
endsnippet
snippet imread "imread" i
imread("${1:img.jpg}",0);
${0}
endsnippet
snippet imshow "imshow" b
imshow("${1}",${2});
${0}
endsnippet
snippet namedWindow "namedWindow" b
namedWindow("$1");
${0}
endsnippet
snippet waitKey "waitKey" b
waitKey(0);
${0}
endsnippet
